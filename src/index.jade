extends ./includes/layout.jade

block content
  h1
    a.anchor(name='pumpio', href='#pumpio')
      span.octicon.octicon-link
    | pump.io

  p Version 1.0.0
  p This is pump.io. It&apos;s a stream server that does most of what people really want from a social network.

  p
    a(href='http://travis-ci.org/e14n/pump.io')
      img(src='https://secure.travis-ci.org/e14n/pump.io.png', alt='Build Status')

  h2 News
  ul
    li
      a(href='https://e14n.com/evan/note/m0B0MlAySEiC8ey4aQ6nPA')
        | Security alert: cross-site scripting vulnerability in pump.io 0.2.x and 0.3.x (master)
    li
      a(href='https://github.com/e14n/pump.io/releases/tag/v1.0.0') Release 1.0.0 is now available (contains security enhancements)

  h2
    a.anchor(name='license', href='#license')
      span.octicon.octicon-link
    | License
  p
    | Copyright 2011-2016, E14N 
    a(href='https://e14n.com/') https://e14n.com/
    |  and contributors
  p
    | Licensed under the Apache License, Version 2.0 (the "License");
    | you may not use this file except in compliance with the License.
    | You may obtain a copy of the License at
  p
    a(href='http://www.apache.org/licenses/LICENSE-2.0') http://www.apache.org/licenses/LICENSE-2.0
  p
    | Unless required by applicable law or agreed to in writing, software
    | distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
    | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    | See the License for the specific language governing permissions and
    | limitations under the License.

  h2
    a.anchor(name='whats-it-for', href='#whats-it-for')
      span.octicon.octicon-link
    | What's it for?
  p
    | I post something and my followers see it. That&apos;s the rough idea behind
    | the pump.
  p
    | There&apos;s an API defined in the API.md file. It uses activitystrea.ms
    | JSON as the main data and command format.
  p
    | You can post almost anything that can be represented with activity
    | streams -- short or long text, bookmarks, images, video, audio,
    | events, geo checkins. You can follow friends, create lists of people,
    | and so on.
  p The software is useful for at least these scenarios:
  ul
    li Mobile-first social networking
    li Activity stream functionality for an existing app
    li Experimenting with social software
  | It also comes with a web UI.

  h2
    a.anchor(name='installation', href='#installation')
      span.octicon.octicon-link
    | Installation

  h3
    a.anchor(name='prerequisites', href='#prerequisites')
      span.octicon.octicon-link
    | Prerequisites
  p You&apos;ll need four things to get started:
  ul
    li node.js 0.10 or 0.12
    li npm 1.1.0 or higher
    li A database server (see below)
    li
      | The 
      code graphicsmagick
      |  package with the 
      code gm
      |  command
  p
    | Note that the requirement to have 
    code gm
    |  available is new for 0.3.0; if
    | you're upgrading, you need to install it.

  h3
    a.anchor(name='install-with-npm', href='#install-with-npm')
      span.octicon.octicon-link
    | Install with npm
  p The easiest way is to install the software globally using npm, like so:
  pre
    code npm install -g pump.io
  p That should set up all the files and dependencies for you.

  h3
    a.anchor(name='local-install', href='#local-install')
      span.octicon.octicon-link
    | Local install
  p If you want to set up the software in its own directory, you can clone the git repository, so:
  pre
    code git clone https://github.com/e14n/pump.io.git
  p
    | You can then install the dependencies using 
    code npm
    | :
  pre
    code.
      cd pump.io
      npm install
  p To test the install, run:
  pre
    code npm test
  h3
    a.anchor(name='database-setup', href='#database-setup')
      span.octicon.octicon-link
    | Database setup
  p
    | pump.io uses 
    a(href='https://github.com/evanp/databank') databank
    | package to abstract out the data storage for the system. Any databank
    | driver should work. Couchbase, MongoDB and Redis are probably the best
    | bets for production servers, but the 
    code disk
    |  or even 
    code memory
    |  drivers
    | can work for testing.
  p
    | If you're confused, just use the MongoDB one, 
    code databank-mongodb
    | .
  p You can find other drivers like so:
  pre
    code npm search databank
  p
    | One tricky bit is that the driver you use has to be available to the
    code databank
    |  package. There are two ways to make that work.
  p First, you can install globally. For example:
  pre
    code npm install -g databank-mongodb
  p Use this if you installed the pump.io package globally.
  p
    | Second, you can install in the 
    code databank
    |  directory.
  pre
    code.
      cd pump.io/node_modules/databank
      npm install databank-mongodb          
  p Note that you also need to install and configure your database server.

  h3
    a.anchor(name='configuration', href='#configuration')
      span.octicon.octicon-link
    | Configuration
  p
    | pump.io uses a JSON file for configuration. It should be at
    code /etc/pump.io.json
    |  or on 
    code ~/.pump.io.json
    | .
  p
    | The 
    code pump.io.json.sample
    |  file should give you an idea of how to use
    | it.
  p
    | The default config values are stored in the source file 
    code lib/defaults.js
    | .
  p you can override the config file location with the 
    code -c
    |  option.
    p
    pre
      code pump -c &lt;CONFIG_FILE&gt;
    p Here are the main configuration keys.
    ul
      li
        em driver
        |  The databank driver you&apos;re using. Defaults to &quot;disk&quot;, which
        | is probably going to be terrible.
      li
        em params
        |  Databank driver params; see the databank driver README for
        | details on what to put here.
      li
        em hostname
        |  The hostname of the server. Defaults to &quot;localhost&quot; which
        | doesn&apos;t do much for you.
      li
        em address
        |  The address to listen on. Defaults to 
        code hostname
        | , which is
        | OK for most systems. Use this if you&apos;ve got some kind of
        | load-balancer or NAS or whatever and your local IP doesn&apos;t map to
        | the IP of the hostname.
      li
        em port
        |  Port to listen on. Defaults to 31337, which is no good. You
        | should listen on 80 or 443 if you&apos;re going to have anyone use this.
      li
        em urlPort
        |  Port to use for generating URLs. Defaults to the same as 
        code port
        | ,
        | but if you&apos;re insisting on proxying behind Apache or whatever despite
        | warnings not to, you can use this.
      li
        em secret
        |  A session-generating secret, server-wide password.
      li
        em noweb
        |  Hide the Web interface. Defaults to 
        code false
        | . Set this to
        | something truthy to disable the Web interface.
      li
        em site
        |  Name of the server, like &quot;My great social service&quot;.
      li
        em owner
        |  Name of owning entity, if you want to link to it.
      li
        em ownerURL
        |  URL of owning entity, if you want to link to it.
      li
        em nologger
        |  If you&apos;re debugging or whatever, turn off
        | logging. Defaults to false (leave logging on).
      li
        em logfile
        |  Full path to the logfile. Logs are JSON in
        a(href='https://github.com/trentm/node-bunyan') bunyan
        |  format.
      li
        em serverUser
        |  If you&apos;re listening on a port lower than 1024, you need
        | to be root. Set this to the name of a user to change to after the
        | server is listening. 
        code daemon
        |  or 
        code nobody
        |  are good choices, or you
        | can create a user like 
        code pump
        |  and use that.
      li
        em key
        |  If you&apos;re using SSL, the path to the server key, like
        code /etc/ssl/private/myserver.key
        | .
      li
        em cert
        |  If you&apos;re using SSL, the path to the server cert, like
        code /etc/ssl/private/myserver.crt
        | .
      li
        em uploaddir
        |  If you want to enable file uploads, set this to the
        | full path of a local directory. It should be writeable and readable by the
        | &apos;serverUser&apos;.
      li
        em debugClient
        |  For developers, if you&apos;re debugging the Web interface
        | and you want to use the non-minified version of the JavaScript libraries,
        | set this to 
        code true
        | . Defaults to 
        code false
        | , which is what people should
        | use in production.
      li
        em firehose
        |  Firehose host running the
        a(href='https://github.com/e14n/ofirehose') ofirehose
        |  software. Defaults
        | to &quot;ofirehose.com&quot;. Public notices will be ping this firehose
        | server and from there go out to search engines and the world. If
        | you want to disconnect from the public web, set this to something
        | falsy.
      li
        em spamhost
        |  Host running activityspam software to use to test updates for spam.
      li
        em spamclientid
        |  oauth pair for spam server.
      li
        em spamclientsecret
        |  oauth pair for spam server.
      li
        em disableRegistration
        |  default false. Disables registering new users on the
        | site through the Web or the API.
      li
        em noCDN
        |  Use local copies of the JavaScript libraries instead of the
        | ones on the CDN. Good for debugging. Defaults to 
        code false
        | , meaning
        | &quot;use the CDN&quot;.
      li
        em requireEmail
        |  Require an email address to register. Should be ignored if email
        | server isn&apos;t configured. Default 
        code false
        | .
      li
        em smtpserver
        |  Server to use for sending transactional email. If it&apos;s not set up,
        | no email is sent and features like password recovery and email notification won&apos;t
        | work. Defaults to 
        code undefined
        | .
      li
        em smtpport
        |  Port to connect to on SMTP server. Defaults to 
        code 25
        |  which is really the only
        | sane value.
      li
        em smtpuser
        |  Username to use to connect to SMTP server. Might not be necessary for some
        | servers. Defaults to 
        code undefined
        | .
      li
        em smtppass
        |  Password to use to connect to SMTP server. Might not be necessary for some
        | servers. Defaults to 
        code undefined
        | .
      li
        em smtpusetls
        |  Try to negotiate using SSL with the SMTP server. Defaults to 
        code true
        | , because
        | it&apos;s a smart idea.
      li
        em smtpusessl
        |  Only use SSL with the SMTP server. Defaults to 
        code false
        | . You may need to change
        | the 
        code smtpport
        |  value if you set this.
      li
        em smtptimeout
        |  Timeout for connecting to the SMTP server in milliseconds. Defaults to 
        code 30000
        | . Change this if... I dunno. I see no reason to change this.
      li
        em smtpfrom
        |  Email address to use in the &quot;From:&quot; header of outgoing notifications. Defaults to 
        code no-reply@
        |  plus the site hostnam.
      li
        em compress
        |  Use gzip or deflate to compress text output. This can cut down on network
        | transfers considerably at the expense of memory and CPU on the server. Defaults to 
        code true
        | .
      li
        em children
        |  Number of children to run. Defaults to 1 for some kinds of DBs, number of CPUS - 1 for others.
      li
        em clients
        | . You can pre-configure some OAuth credentials if you want to have a replicable
        | configuration (say, for test scripts or development environments). This setting is
        | an array of objects, each of which has a &apos;client_id&apos; and &apos;client_secret&apos; property, and
        | an optional &apos;title&apos; and &apos;description&apos; object. Most people don&apos;t need this. Default is an empty list.
      li
        em sockjs
        |  Use 
        a(href='https://github.com/sockjs/sockjs-node') SockJS-node
        |  to provide a realtime connection. Defaults to &grave;true&grave;.
      li
        em cleanupSession
        |  Time interval to clean up sessions (in ms). These are staggered a bit if you have more than one child process running, to spread them out a bit. Defaults to 1200000, or 20 minutes.
      li
        em cleanupNonce
        |  Time interval to clean up OAuth nonces (in ms). Staggered.
        |   Defaults to 1200000, or 20 minutes.
      li
        em favicon
        |  Local filesystem path to the favicon.ico file to use. This will be served as &quot;/favicon.ico&quot;
        |   by the server. By default, uses public/images/favicon.ico.
    h3
      a.anchor(name='web-server-proxy', href='#web-server-proxy')
        span.octicon.octicon-link
      | Web server proxy
    p
      | pump.io is designed to be a standalone server. You do not need
      | to set up an Apache or nginx or lighttpd Web server in front of
      | it. In fact, that&apos;s going to make things harder for you, and stuff
      | like WebSockets is going to work less well.
    p
      | If you really insist, check the configuration options carefully. If
      | you want 
      a(href='http://pump.yourdomain.example/') http://pump.yourdomain.example/
      |  to proxy to the pump.io
      | daemon listening on port 8000 on 127.0.0.1, use configuration options
      | like this:
    pre
      code.
        "hostname": "pump.yourdomain.example",
        "urlPort": 80,
        "address": "127.0.0.1",
        "port": 8000

    h2
      a.anchor(name='running-the-daemon', href='#running-the-daemon')
        span.octicon.octicon-link
      | Running the daemon
    p
      | You&apos;ll probably get a more reliable experience if you use
      a(href='https://npmjs.org/package/forever') forever
      |  to keep the daemon running.

    h2
      a.anchor(name='making-changes', href='#making-changes')
        span.octicon.octicon-link
      | Making changes
    p
      | If you&apos;re connecting your pump.io site with other software (such as
      | federated servers or using Web clients), please note that most of them
      | save OAuth keys based on your hostname and listening port. The
      | following changes may make your relationships stop working.
    ul
      li Change of hostname
      li Change of port (from 8000 to 80 or even from HTTP to HTTPS)
      li Clearing your database or clearing some tables
      li Changing user nicknames
    p
      | I realize that these kind of changes are normal when someone&apos;s
      | experimenting with new software, and I&apos;m trying to make the software
      | more robust in the face of this kind of change without sacrificing
      | security, but for now it&apos;s a good idea to decide on your &quot;real&quot; domain
      | name first before making connections to other sites.

    h2
      a.anchor(name='bugs', href='#bugs')
        span.octicon.octicon-link
      | Bugs
    p If you find bugs, you can report them here:
    p
      a(href='https://github.com/e14n/pump.io/issues') https://github.com/e14n/pump.io/issues
    p
      | You can also email me at 
      a(href='mailto:evan@e14n.com') evan@e14n.com
      | .

    h2
      a.anchor(name='colophon', href='#colophon')
        span.octicon.octicon-link
      | Colophon
    p This software includes the following great packages of client-side software.
    ul
      li Twitter Bootstrap
      li Backbone
      li JQuery
      li Fine Uploader
      li WysiHTML5
      li Spin.js
      li SockJS
      li Select2
      li JQuery Easydate
      li OAuth.js
    p It also uses these icon sets:
    ul
      li
        | Fancy Avatars, &copy; 2009 Brandon Mathis, 
        a(href='http://brandonmathis.com/projects/fancy-avatars/') http://brandonmathis.com/projects/fancy-avatars/
        |  (CC-By)
      li
        | Glyphicons, 
        a(href='http://glyphicons.com/') http://glyphicons.com/
        |  (CC-By)
    p This sample photo is used for the main page:
    ul
      li
        a(href='http://www.flickr.com/photos/makelessnoise/240072395/') http://www.flickr.com/photos/makelessnoise/240072395/
        |  (CC-by)
